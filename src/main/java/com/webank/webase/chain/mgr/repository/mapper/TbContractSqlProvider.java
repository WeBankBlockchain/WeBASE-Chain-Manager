package com.webank.webase.chain.mgr.repository.mapper;

import org.apache.commons.collections4.CollectionUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.ibatis.jdbc.SQL;
import com.webank.webase.chain.mgr.contract.entity.ContractParam;
import com.webank.webase.chain.mgr.repository.bean.TbContract;
import java.util.stream.Collectors;
import com.webank.webase.chain.mgr.repository.bean.TbContractExample.Criteria;
import com.webank.webase.chain.mgr.repository.bean.TbContractExample.Criterion;
import com.webank.webase.chain.mgr.repository.bean.TbContractExample;
import java.util.List;
import java.util.Map;

public class TbContractSqlProvider {

    public String getByParam(ContractParam param) {
        SQL sql = new SQL();
        sql.SELECT(ALL_COLUMN_FIELDS).FROM("tb_contract");
        this.applyContractParam(sql, param);
        return sql.toString();
    }

    public String selectByParam(ContractParam param) {
        SQL sql = new SQL();
        sql.SELECT(ALL_COLUMN_FIELDS).FROM("tb_contract");
        return this.applyContractParam(sql, param);
    }

    public String countByParam(ContractParam param) {
        SQL sql = new SQL();
        sql.SELECT("count(1)").FROM("tb_contract");
        return this.applyContractParam(sql, param);
    }

    public String applyContractParam(SQL sql, ContractParam param) {
        if (param.getContractId() != null) {
            sql.WHERE("contract_id = #{contractId}");
        }
        if (param.getChainId() != null) {
            sql.WHERE("chain_id = #{chainId}");
        }
        if (param.getGroupId() != null) {
            sql.WHERE("group_id = #{groupId}");
        }
        if (StringUtils.isNotBlank(param.getContractName())) {
            sql.WHERE("contract_name = #{contractName}");
        }
        if (StringUtils.isNotBlank(param.getContractAddress())) {
            sql.WHERE("contract_address = #{contractAddress}");
        }
        if (StringUtils.isNotBlank(param.getContractPath())) {
            sql.WHERE("contract_path = #{contractPath}");
        }
        if (param.getContractType() != null) {
            sql.WHERE("contract_type = #{contractType}");
        }
        if (param.getContractStatus() != null) {
            sql.WHERE("contract_status = #{contractStatus}");
        }
        if (!CollectionUtils.isEmpty(param.getContractIdList())) {
            sql.WHERE(String.format("contract_id in(%s)", StringUtils.join(param.getContractIdList(), ",")));
        }
        if (!CollectionUtils.isEmpty(param.getGroupIdList())) {
            sql.WHERE(String.format("group_id in(%s)", StringUtils.join(param.getGroupIdList(), ",")));
        }
        if (StringUtils.isNotBlank(param.getFlagSortedByTime())) {
            sql.ORDER_BY(String.format("modify_time %s", param.getFlagSortedByTime()));
        }

        // add pagination for mysql with limit clause
        StringBuilder sqlBuilder = new StringBuilder(sql.toString());
        if (param.getStart() != null && param.getStart() > -1
            || param.getPageSize() != null && param.getPageSize() > -1) {
            sqlBuilder.append(" limit ");
            if ((param.getStart() !=null && param.getStart() > -1) && (param.getPageSize() !=null &&param.getPageSize() > -1)) {
                sqlBuilder.append(param.getStart()).append(",").append(param.getPageSize());
            } else if (param.getStart() !=null && param.getStart() > -1) {
                sqlBuilder.append(param.getStart());
            } else if (param.getPageSize() !=null &&param.getPageSize() > -1) {
                sqlBuilder.append(param.getPageSize());
            }
        }

        return sqlBuilder.toString();
    }

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public static final String ALL_COLUMN_FIELDS = "contract_id,contract_path,contract_name,chain_id,group_id,save_by_agency,contract_address,deploy_time,contract_status,contract_type,description,create_time,modify_time,contract_source,contract_abi,contract_bin,bytecode_bin";

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public String countByExample(TbContractExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("tb_contract");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public String deleteByExample(TbContractExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("tb_contract");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public String insertSelective(TbContract record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("tb_contract");
        if (record.getContractPath() != null) {
            sql.VALUES("contract_path", "#{contractPath,jdbcType=VARCHAR}");
        }
        if (record.getContractName() != null) {
            sql.VALUES("contract_name", "#{contractName,jdbcType=VARCHAR}");
        }
        if (record.getChainId() != null) {
            sql.VALUES("chain_id", "#{chainId,jdbcType=INTEGER}");
        }
        if (record.getGroupId() != null) {
            sql.VALUES("group_id", "#{groupId,jdbcType=INTEGER}");
        }
        if (record.getSaveByAgency() != null) {
            sql.VALUES("save_by_agency", "#{saveByAgency,jdbcType=INTEGER}");
        }
        if (record.getContractAddress() != null) {
            sql.VALUES("contract_address", "#{contractAddress,jdbcType=VARCHAR}");
        }
        if (record.getDeployTime() != null) {
            sql.VALUES("deploy_time", "#{deployTime,jdbcType=TIMESTAMP}");
        }
        if (record.getContractStatus() != null) {
            sql.VALUES("contract_status", "#{contractStatus,jdbcType=TINYINT}");
        }
        if (record.getContractType() != null) {
            sql.VALUES("contract_type", "#{contractType,jdbcType=TINYINT}");
        }
        if (record.getDescription() != null) {
            sql.VALUES("description", "#{description,jdbcType=VARCHAR}");
        }
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        if (record.getModifyTime() != null) {
            sql.VALUES("modify_time", "#{modifyTime,jdbcType=TIMESTAMP}");
        }
        if (record.getContractSource() != null) {
            sql.VALUES("contract_source", "#{contractSource,jdbcType=LONGVARCHAR}");
        }
        if (record.getContractAbi() != null) {
            sql.VALUES("contract_abi", "#{contractAbi,jdbcType=LONGVARCHAR}");
        }
        if (record.getContractBin() != null) {
            sql.VALUES("contract_bin", "#{contractBin,jdbcType=LONGVARCHAR}");
        }
        if (record.getBytecodeBin() != null) {
            sql.VALUES("bytecode_bin", "#{bytecodeBin,jdbcType=LONGVARCHAR}");
        }
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public String selectByExampleWithBLOBs(TbContractExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("contract_id");
        } else {
            sql.SELECT("contract_id");
        }
        sql.SELECT("contract_path");
        sql.SELECT("contract_name");
        sql.SELECT("chain_id");
        sql.SELECT("group_id");
        sql.SELECT("save_by_agency");
        sql.SELECT("contract_address");
        sql.SELECT("deploy_time");
        sql.SELECT("contract_status");
        sql.SELECT("contract_type");
        sql.SELECT("description");
        sql.SELECT("create_time");
        sql.SELECT("modify_time");
        sql.SELECT("contract_source");
        sql.SELECT("contract_abi");
        sql.SELECT("contract_bin");
        sql.SELECT("bytecode_bin");
        sql.FROM("tb_contract");
        applyWhere(sql, example, false);
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public String selectByExample(TbContractExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("contract_id");
        } else {
            sql.SELECT("contract_id");
        }
        sql.SELECT("contract_path");
        sql.SELECT("contract_name");
        sql.SELECT("chain_id");
        sql.SELECT("group_id");
        sql.SELECT("save_by_agency");
        sql.SELECT("contract_address");
        sql.SELECT("deploy_time");
        sql.SELECT("contract_status");
        sql.SELECT("contract_type");
        sql.SELECT("description");
        sql.SELECT("create_time");
        sql.SELECT("modify_time");
        sql.FROM("tb_contract");
        applyWhere(sql, example, false);
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        // add pagination for mysql with limit clause 
        StringBuilder sqlBuilder = new StringBuilder(sql.toString());
        if (example != null && (example.getStart() > -1 || example.getCount() > -1)) {
            sqlBuilder.append(" limit ");
            if (example.getStart() > -1 && example.getCount() > -1) {
                sqlBuilder.append(example.getStart()).append(",").append(example.getCount());
            } else if (example.getStart() > -1) {
                sqlBuilder.append(example.getStart());
            } else if (example.getCount() > -1) {
                sqlBuilder.append(example.getCount());
            }
        }
        return sqlBuilder.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        TbContract record = (TbContract) parameter.get("record");
        TbContractExample example = (TbContractExample) parameter.get("example");
        SQL sql = new SQL();
        sql.UPDATE("tb_contract");
        if (record.getContractId() != null) {
            sql.SET("contract_id = #{record.contractId,jdbcType=INTEGER}");
        }
        if (record.getContractPath() != null) {
            sql.SET("contract_path = #{record.contractPath,jdbcType=VARCHAR}");
        }
        if (record.getContractName() != null) {
            sql.SET("contract_name = #{record.contractName,jdbcType=VARCHAR}");
        }
        if (record.getChainId() != null) {
            sql.SET("chain_id = #{record.chainId,jdbcType=INTEGER}");
        }
        if (record.getGroupId() != null) {
            sql.SET("group_id = #{record.groupId,jdbcType=INTEGER}");
        }
        if (record.getSaveByAgency() != null) {
            sql.SET("save_by_agency = #{record.saveByAgency,jdbcType=INTEGER}");
        }
        if (record.getContractAddress() != null) {
            sql.SET("contract_address = #{record.contractAddress,jdbcType=VARCHAR}");
        }
        if (record.getDeployTime() != null) {
            sql.SET("deploy_time = #{record.deployTime,jdbcType=TIMESTAMP}");
        }
        if (record.getContractStatus() != null) {
            sql.SET("contract_status = #{record.contractStatus,jdbcType=TINYINT}");
        }
        if (record.getContractType() != null) {
            sql.SET("contract_type = #{record.contractType,jdbcType=TINYINT}");
        }
        if (record.getDescription() != null) {
            sql.SET("description = #{record.description,jdbcType=VARCHAR}");
        }
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        }
        if (record.getModifyTime() != null) {
            sql.SET("modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}");
        }
        if (record.getContractSource() != null) {
            sql.SET("contract_source = #{record.contractSource,jdbcType=LONGVARCHAR}");
        }
        if (record.getContractAbi() != null) {
            sql.SET("contract_abi = #{record.contractAbi,jdbcType=LONGVARCHAR}");
        }
        if (record.getContractBin() != null) {
            sql.SET("contract_bin = #{record.contractBin,jdbcType=LONGVARCHAR}");
        }
        if (record.getBytecodeBin() != null) {
            sql.SET("bytecode_bin = #{record.bytecodeBin,jdbcType=LONGVARCHAR}");
        }
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public String updateByExampleWithBLOBs(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("tb_contract");
        sql.SET("contract_id = #{record.contractId,jdbcType=INTEGER}");
        sql.SET("contract_path = #{record.contractPath,jdbcType=VARCHAR}");
        sql.SET("contract_name = #{record.contractName,jdbcType=VARCHAR}");
        sql.SET("chain_id = #{record.chainId,jdbcType=INTEGER}");
        sql.SET("group_id = #{record.groupId,jdbcType=INTEGER}");
        sql.SET("save_by_agency = #{record.saveByAgency,jdbcType=INTEGER}");
        sql.SET("contract_address = #{record.contractAddress,jdbcType=VARCHAR}");
        sql.SET("deploy_time = #{record.deployTime,jdbcType=TIMESTAMP}");
        sql.SET("contract_status = #{record.contractStatus,jdbcType=TINYINT}");
        sql.SET("contract_type = #{record.contractType,jdbcType=TINYINT}");
        sql.SET("description = #{record.description,jdbcType=VARCHAR}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        sql.SET("modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}");
        sql.SET("contract_source = #{record.contractSource,jdbcType=LONGVARCHAR}");
        sql.SET("contract_abi = #{record.contractAbi,jdbcType=LONGVARCHAR}");
        sql.SET("contract_bin = #{record.contractBin,jdbcType=LONGVARCHAR}");
        sql.SET("bytecode_bin = #{record.bytecodeBin,jdbcType=LONGVARCHAR}");
        TbContractExample example = (TbContractExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("tb_contract");
        sql.SET("contract_id = #{record.contractId,jdbcType=INTEGER}");
        sql.SET("contract_path = #{record.contractPath,jdbcType=VARCHAR}");
        sql.SET("contract_name = #{record.contractName,jdbcType=VARCHAR}");
        sql.SET("chain_id = #{record.chainId,jdbcType=INTEGER}");
        sql.SET("group_id = #{record.groupId,jdbcType=INTEGER}");
        sql.SET("save_by_agency = #{record.saveByAgency,jdbcType=INTEGER}");
        sql.SET("contract_address = #{record.contractAddress,jdbcType=VARCHAR}");
        sql.SET("deploy_time = #{record.deployTime,jdbcType=TIMESTAMP}");
        sql.SET("contract_status = #{record.contractStatus,jdbcType=TINYINT}");
        sql.SET("contract_type = #{record.contractType,jdbcType=TINYINT}");
        sql.SET("description = #{record.description,jdbcType=VARCHAR}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        sql.SET("modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}");
        TbContractExample example = (TbContractExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(TbContract record) {
        SQL sql = new SQL();
        sql.UPDATE("tb_contract");
        if (record.getContractPath() != null) {
            sql.SET("contract_path = #{contractPath,jdbcType=VARCHAR}");
        }
        if (record.getContractName() != null) {
            sql.SET("contract_name = #{contractName,jdbcType=VARCHAR}");
        }
        if (record.getChainId() != null) {
            sql.SET("chain_id = #{chainId,jdbcType=INTEGER}");
        }
        if (record.getGroupId() != null) {
            sql.SET("group_id = #{groupId,jdbcType=INTEGER}");
        }
        if (record.getSaveByAgency() != null) {
            sql.SET("save_by_agency = #{saveByAgency,jdbcType=INTEGER}");
        }
        if (record.getContractAddress() != null) {
            sql.SET("contract_address = #{contractAddress,jdbcType=VARCHAR}");
        }
        if (record.getDeployTime() != null) {
            sql.SET("deploy_time = #{deployTime,jdbcType=TIMESTAMP}");
        }
        if (record.getContractStatus() != null) {
            sql.SET("contract_status = #{contractStatus,jdbcType=TINYINT}");
        }
        if (record.getContractType() != null) {
            sql.SET("contract_type = #{contractType,jdbcType=TINYINT}");
        }
        if (record.getDescription() != null) {
            sql.SET("description = #{description,jdbcType=VARCHAR}");
        }
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        if (record.getModifyTime() != null) {
            sql.SET("modify_time = #{modifyTime,jdbcType=TIMESTAMP}");
        }
        if (record.getContractSource() != null) {
            sql.SET("contract_source = #{contractSource,jdbcType=LONGVARCHAR}");
        }
        if (record.getContractAbi() != null) {
            sql.SET("contract_abi = #{contractAbi,jdbcType=LONGVARCHAR}");
        }
        if (record.getContractBin() != null) {
            sql.SET("contract_bin = #{contractBin,jdbcType=LONGVARCHAR}");
        }
        if (record.getBytecodeBin() != null) {
            sql.SET("bytecode_bin = #{bytecodeBin,jdbcType=LONGVARCHAR}");
        }
        sql.WHERE("contract_id = #{contractId,jdbcType=INTEGER}");
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    protected void applyWhere(SQL sql, TbContractExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public String getOneByExample(TbContractExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("contract_id");
        } else {
            sql.SELECT("contract_id");
        }
        sql.SELECT("contract_path");
        sql.SELECT("contract_name");
        sql.SELECT("chain_id");
        sql.SELECT("group_id");
        sql.SELECT("save_by_agency");
        sql.SELECT("contract_address");
        sql.SELECT("deploy_time");
        sql.SELECT("contract_status");
        sql.SELECT("contract_type");
        sql.SELECT("description");
        sql.SELECT("create_time");
        sql.SELECT("modify_time");
        sql.SELECT("contract_source");
        sql.SELECT("contract_abi");
        sql.SELECT("contract_bin");
        sql.SELECT("bytecode_bin");
        sql.FROM("tb_contract");
        applyWhere(sql, example, false);
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        StringBuilder sqlBuilder = new StringBuilder(sql.toString());
        sqlBuilder.append(" limit 1 ");
        return sqlBuilder.toString();
    }
}
